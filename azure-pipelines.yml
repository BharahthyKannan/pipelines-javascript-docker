# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: MyHostedVM
    steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'acrconnection'
          repository: $(imageName)
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
      - task: CmdLine@2
        displayName: Trivy Scan
        inputs:
          script: |
            echo Scanning Started
            echo $(registryName)
            echo $(imageName)
            echo $(tag)
            echo $(registryName)/$(imageName):$(tag)
            echo check variable completed 
             #trivy image $(registryName)/$(imageName):$(tag)#
            cat junit.tpl
            #trivy image --severity LOW,MEDIUM --format template --template "@junit.tpl" -o junit-report-low-med.xml  $(registryName)/$(imageName):$(tag
            #trivy image --severity LOW,MEDIUM --format template --template "@junit.tpl" -o junit-report-low-med.xml  infymscontainers.azurecr.io/infymstestcontainers:111
            #trivy image --severity CRITICAL,HIGH --format template --template "@junit.tpl" -o junit-report-high-critical.xml  infymscontainers.azurecr.io/infymstestcontainers:111
            #below exit code can be updated as pre the need
            trivy image --exit-code 0 --severity LOW,MEDIUM $(registryName)/$(imageName):$(tag)
            trivy image --exit-code 0 --severity HIGH,CRITICAL $(registryName)/$(imageName):$(tag)         
      - task: PublishTestResults@2
        enabled: false
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '**/junit-report-low-med.xml'
          testRunTitle: 'Trivy - Low and Medium Vulnerabilities'
          mergeTestResults: true
          failTaskOnFailedTests: false
        condition: 'always()'  
      - task: PublishTestResults@2
        enabled: false
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '**/junit-report-high-critical.xml'
          testRunTitle: 'Trivy - Low and Medium Vulnerabilities'
          mergeTestResults: true
          failTaskOnFailedTests: false
        condition: 'always()'
      